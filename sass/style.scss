@use "foundation";
@use "global" as g;
li {
    @include g.list-reset;
    color: g.$color-error;
}
/*エクステンド*/
.notes {
    color: #d92c25;
    font-weight: bold;
    text-align: center;
}
.bd {
    border-top: 1px solid #900;
    border-bottom: 1px solid #900;
}

.item {
    small {
        display: block;
        padding: 10px;
        @extend .notes;
        @extend .bd;
    }
}
/*連鎖*/
.att {
    color: red;
    font-weight: normal;
}
.attBox {
    @extend .att;
    padding: 15px;
    border: 1px solid red;
}
.notes01 {
    @extend .attBox;
}

/*エクステンド専用のプレースホルダーセレクタ*/
%boxBase {
  padding: 15px;
  border: 1px solid #999;
}
.item01 {
  @extend %boxBase;
  margin-bottom: 20px;
}
section {
  @extend %boxBase;
  margin-bottom: 60px;
}
/*@mediaとエクステンド*/


@media all and (orientation: landscape) {
    %btnBase {
    display: inline-block;
    padding: 5px 10px;
    background: #eee;
}
    a {
        @extend %btnBase;
    }
}

.btn {
    /*存在しないセレクタのエラー警告回避*/
    @extend %addBtn !optional;
}

/*ミックスイン*/
@mixin boxSet {
    padding: 15px;
    background: #999;
    color: white;
}
.relatedArea {
    @include boxSet;
}

.pickupArea {
    @include boxSet;
}

@mixin kadomaru($value: 3px) {
    -moz-border-radius: $value;
    -webkit-border-radius: $value;
    border-radius: $value;
}
.boxA {
    @include kadomaru;
    background: #eee;
}
.boxB {
    @include kadomaru();
    background: #f1f1f1;
}

/*ミックスイン引数複数指定*/
@mixin boxBase($margin: 30px 0, $padding: 10px) {
    margin: $margin;
    padding: $padding;
}
.boxA {
    @include boxBase;
    background: #eee;
}
.boxB {
    @include boxBase(0 0 50px, 20px);
    background: #f1f1f1;
}

/*第1引数のみ変更*/
.boxB {
    @include boxBase(0 0 50px);
    background: #f1f1f1;
}
/*第2引数のみ変更*/
.boxB {
    @include boxBase($padding: 20px);
    background: #f1f1f1;
}

